# Generated by Django 5.2.5 on 2025-08-14 17:42

import django.core.validators
import django.db.models.deletion
import django.utils.timezone
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='BankAccount',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('bank', models.CharField(choices=[('001', 'Banco do Brasil'), ('033', 'Santander'), ('237', 'Bradesco'), ('341', 'Itaú'), ('104', 'Caixa Econômica Federal'), ('260', 'Nubank'), ('336', 'C6 Bank'), ('422', 'Banco Safra'), ('655', 'Banco Votorantim'), ('041', 'Banrisul'), ('077', 'Banco Inter'), ('212', 'Banco Original'), ('070', 'BRB'), ('735', 'Neon'), ('739', 'Banco Cetelem'), ('743', 'Banco Semear'), ('745', 'Citibank'), ('746', 'Banco Modal'), ('747', 'Banco Rabobank'), ('748', 'Sicredi'), ('751', 'Scotiabank'), ('752', 'Banco BNP Paribas'), ('753', 'Novo Banco Continental'), ('754', 'Banco Sistema'), ('755', 'Bank of America'), ('756', 'Banco Cooperativo do Brasil')], max_length=5)),
                ('account_type', models.CharField(choices=[('CC', 'Conta Corrente'), ('PP', 'Poupança'), ('AP', 'Rendimentos de Aplicações')], max_length=2)),
                ('agency', models.CharField(max_length=10)),
                ('account_number', models.CharField(max_length=20)),
                ('owner', models.CharField(max_length=100)),
                ('opening_balance', models.DecimalField(decimal_places=2, default=0, max_digits=12)),
                ('opening_date', models.DateField(default=django.utils.timezone.now)),
                ('is_active', models.BooleanField(default=True)),
                ('notes', models.TextField(blank=True, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'ordering': ['bank', 'account_type'],
                'unique_together': {('bank', 'agency', 'account_number')},
            },
        ),
        migrations.CreateModel(
            name='Budget',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('category', models.CharField(choices=[('FOOD', 'Alimentação'), ('TRANSPORT', 'Transporte'), ('HOUSING', 'Moradia'), ('HEALTH', 'Saúde'), ('EDUCATION', 'Educação'), ('LEISURE', 'Lazer'), ('SHOPPING', 'Compras'), ('SERVICES', 'Serviços'), ('OTHERS', 'Outros')], max_length=20)),
                ('amount', models.DecimalField(decimal_places=2, max_digits=12, validators=[django.core.validators.MinValueValidator(0.01)])),
                ('period', models.CharField(choices=[('MONTHLY', 'Mensal'), ('YEARLY', 'Anual')], max_length=10)),
                ('start_date', models.DateField()),
                ('end_date', models.DateField(blank=True, null=True)),
                ('notes', models.TextField(blank=True, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'ordering': ['category'],
            },
        ),
        migrations.CreateModel(
            name='CreditCard',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('card_name', models.CharField(max_length=100)),
                ('card_flag', models.CharField(choices=[('VISA', 'Visa'), ('MC', 'MasterCard'), ('ELO', 'Elo'), ('AMEX', 'American Express'), ('DINERS', 'Diners Club'), ('HIPER', 'Hipercard'), ('VR', 'Vale Refeição'), ('VA', 'Vale Alimentação'), ('SODEXO', 'Sodexo'), ('TICKET', 'Ticket')], max_length=10)),
                ('card_number', models.CharField(max_length=4)),
                ('owner', models.CharField(max_length=100)),
                ('limit', models.DecimalField(decimal_places=2, max_digits=12)),
                ('due_day', models.PositiveIntegerField(validators=[django.core.validators.MinValueValidator(1), django.core.validators.MaxValueValidator(31)])),
                ('closing_day', models.PositiveIntegerField(validators=[django.core.validators.MinValueValidator(1), django.core.validators.MaxValueValidator(31)])),
                ('is_active', models.BooleanField(default=True)),
                ('notes', models.TextField(blank=True, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'ordering': ['card_flag', 'card_name'],
            },
        ),
        migrations.CreateModel(
            name='Transaction',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('transaction_type', models.CharField(choices=[('IN', 'Entrada'), ('OUT', 'Saída')], max_length=3)),
                ('amount', models.DecimalField(decimal_places=2, max_digits=12, validators=[django.core.validators.MinValueValidator(0.01)])),
                ('date', models.DateField(default=django.utils.timezone.now)),
                ('description', models.CharField(max_length=200)),
                ('category', models.CharField(blank=True, choices=[('FOOD', 'Alimentação'), ('TRANSPORT', 'Transporte'), ('HOUSING', 'Moradia'), ('HEALTH', 'Saúde'), ('EDUCATION', 'Educação'), ('LEISURE', 'Lazer'), ('SHOPPING', 'Compras'), ('SERVICES', 'Serviços'), ('OTHERS', 'Outros')], max_length=20, null=True)),
                ('subcategory', models.CharField(blank=True, max_length=50, null=True)),
                ('payment_method', models.CharField(blank=True, choices=[('CASH', 'À vista'), ('CREDIT', 'Crédito'), ('DEBIT', 'Débito'), ('PIX', 'PIX'), ('TRANSFER', 'Transferência'), ('OTHER', 'Outro')], max_length=10, null=True)),
                ('is_recurrent', models.BooleanField(default=False)),
                ('recurrence', models.CharField(choices=[('NONE', 'Nenhuma'), ('DAILY', 'Diária'), ('WEEKLY', 'Semanal'), ('BIWEEKLY', 'Quinzenal'), ('MONTHLY', 'Mensal'), ('BIMONTHLY', 'Bimestral'), ('QUARTERLY', 'Trimestral'), ('SEMIANNUAL', 'Semestral'), ('ANNUAL', 'Anual')], default='NONE', max_length=15)),
                ('installments', models.PositiveIntegerField(default=1)),
                ('current_installment', models.PositiveIntegerField(default=1)),
                ('location', models.CharField(blank=True, max_length=100, null=True)),
                ('notes', models.TextField(blank=True, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('account', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='finance.bankaccount')),
                ('credit_card', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='finance.creditcard')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'ordering': ['-date', '-created_at'],
            },
        ),
    ]
